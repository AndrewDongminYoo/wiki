"use strict";(self.webpackChunkmy_wiki=self.webpackChunkmy_wiki||[]).push([[951],{3488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(5893),a=n(3905);const o={slug:"what-command-create-multiple-files-in-cli",title:"what-command-create-multiple-files-in-cli",authors:"andrew",tags:[]},i="what-command-create-multiple-files-in-cli",c={permalink:"/wiki/en/blog/what-command-create-multiple-files-in-cli",source:"@site/blog/2023-05-01-what-command-create-multiple-files-in-cli.mdx",title:"what-command-create-multiple-files-in-cli",description:'To create files A1.md through A10.md in one folder using the command-line interface (CLI), you can use a command called "touch" along\xa0with brace expansion. Here\'s an example of the command you can use:',date:"2023-05-01T00:00:00.000Z",formattedDate:"May 1, 2023",tags:[],readingTime:.5,hasTruncateMarker:!1,authors:[{name:"Dongmin Yu",title:"Cross Platform Developer Android, iOS, macOS.",url:"https://gravatar.com/donminzzi",imageURL:"https://avatars.githubusercontent.com/u/82999715?v=4",key:"andrew"}],frontMatter:{slug:"what-command-create-multiple-files-in-cli",title:"what-command-create-multiple-files-in-cli",authors:"andrew",tags:[]},unlisted:!1,prevItem:{title:"\ub9ac\ub205\uc2a4\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 \uae30\ud638\ub4e4\uc758 \uc0ac\uc6a9\ubc29\ubc95",permalink:"/wiki/en/blog/how-to-use-symbols-used-in-linux"},nextItem:{title:"MacOS Notes \uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc775\uc2a4\ud3ec\ud2b8",permalink:"/wiki/en/blog/mac-os-application-notes-export"}},l={authorsImageUrls:[void 0]},s=[];function m(e){const t={code:"code",p:"p",pre:"pre",...(0,a.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:'ygka "What command can you use to tell the CLI to create files A1.md through A10.md in one folder?"\n'})}),"\n",(0,r.jsx)(t.p,{children:'To create files A1.md through A10.md in one folder using the command-line interface (CLI), you can use a command called "touch" along\xa0with brace expansion. Here\'s an example of the command you can use:'}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-sh",children:"touch A{1..10}.md\n"})}),"\n",(0,r.jsxs)(t.p,{children:['This command will create 10 files in the current directory with the names A1.md through A10.md. The "touch" command is used to create\xa0empty files, and the brace expansion syntax ',(0,r.jsx)(t.code,{children:"{1..10}"})," is used to generate a sequence of numbers from 1 to 10."]})]})}function u(e={}){const{wrapper:t}={...(0,a.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},3905:(e,t,n)=>{n.d(t,{ah:()=>s});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(n),p=a,h=d["".concat(l,".").concat(p)]||d[p]||m[p]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));u.displayName="MDXCreateElement"}}]);